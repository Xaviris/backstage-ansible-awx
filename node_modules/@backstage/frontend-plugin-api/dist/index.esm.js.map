{"version":3,"file":"index.esm.js","sources":["../src/apis/definitions/AppTreeApi.ts","../src/components/ErrorBoundary.tsx","../src/components/ExtensionSuspense.tsx","../../core-plugin-api/src/analytics/Tracker.ts","../src/components/ExtensionBoundary.tsx","../src/wiring/createExtensionDataRef.ts","../src/wiring/coreExtensionData.ts","../src/wiring/createExtension.ts","../src/wiring/createExtensionInput.ts","../src/wiring/createPlugin.ts","../src/wiring/createExtensionOverrides.ts","../src/extensions/createApiExtension.ts","../src/schema/createSchemaFromZod.ts","../src/extensions/createPageExtension.tsx","../src/extensions/createNavItemExtension.tsx","../src/extensions/createThemeExtension.ts","../src/routing/describeParentCallSite.ts","../src/routing/RouteRef.ts","../src/routing/SubRouteRef.ts","../src/routing/ExternalRouteRef.ts","../src/routing/useRouteRef.tsx","../src/routing/useRouteRefParams.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport { BackstagePlugin, Extension, ExtensionDataRef } from '../../wiring';\n\n/**\n * The specification for this {@link AppNode} in the {@link AppTree}.\n *\n * @public\n * @remarks\n *\n * The specifications for a collection of app nodes is all the information needed\n * to build the tree and instantiate the nodes.\n */\nexport interface AppNodeSpec {\n  readonly id: string;\n  readonly attachTo: { id: string; input: string };\n  readonly extension: Extension<unknown>;\n  readonly disabled: boolean;\n  readonly config?: unknown;\n  readonly source?: BackstagePlugin;\n}\n\n/**\n * The connections from this {@link AppNode} to other nodes.\n *\n * @public\n * @remarks\n *\n * The app node edges are resolved based on the app node specs, regardless of whether\n * adjacent nodes are disabled or not. If no parent attachment is present or\n */\nexport interface AppNodeEdges {\n  readonly attachedTo?: { node: AppNode; input: string };\n  readonly attachments: ReadonlyMap<string, AppNode[]>;\n}\n\n/**\n * The instance of this {@link AppNode} in the {@link AppTree}.\n *\n * @public\n * @remarks\n *\n * The app node instance is created when the `factory` function of an extension is called.\n * Instances will only be present for nodes in the app that are connected to the root\n * node and not disabled\n */\nexport interface AppNodeInstance {\n  /** Returns a sequence of all extension data refs that were output by this instance */\n  getDataRefs(): Iterable<ExtensionDataRef<unknown>>;\n  /** Get the output data for a single extension data ref */\n  getData<T>(ref: ExtensionDataRef<T>): T | undefined;\n}\n\n/**\n * A node in the {@link AppTree}.\n *\n * @public\n */\nexport interface AppNode {\n  /** The specification for how this node should be instantiated */\n  readonly spec: AppNodeSpec;\n  /** The edges from this node to other nodes in the app tree */\n  readonly edges: AppNodeEdges;\n  /** The instance of this node, if it was instantiated */\n  readonly instance?: AppNodeInstance;\n}\n\n/**\n * The app tree containing all {@link AppNode}s of the app.\n *\n * @public\n */\nexport interface AppTree {\n  /** The root node of the app */\n  readonly root: AppNode;\n  /** A map of all nodes in the app by ID, including orphaned or disabled nodes */\n  readonly nodes: ReadonlyMap<string /* id */, AppNode>;\n  /** A sequence of all nodes with a parent that is not reachable from the app root node */\n  readonly orphans: Iterable<AppNode>;\n}\n\n/**\n * The API for interacting with the {@link AppTree}.\n *\n * @public\n */\nexport interface AppTreeApi {\n  /**\n   * Get the {@link AppTree} for the app.\n   */\n  getTree(): { tree: AppTree };\n}\n\n/**\n * The `ApiRef` of {@link AppTreeApi}.\n *\n * @public\n */\nexport const appTreeApiRef = createApiRef<AppTreeApi>({ id: 'core.app-tree' });\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component, PropsWithChildren } from 'react';\n// TODO: Dependency on MUI should be removed from core packages\nimport { Button } from '@material-ui/core';\nimport { ErrorPanel } from '@backstage/core-components';\nimport { BackstagePlugin } from '../wiring';\n\ntype DefaultErrorBoundaryFallbackProps = PropsWithChildren<{\n  plugin?: BackstagePlugin;\n  error: Error;\n  resetError: () => void;\n}>;\n\nconst DefaultErrorBoundaryFallback = ({\n  plugin,\n  error,\n  resetError,\n}: DefaultErrorBoundaryFallbackProps) => {\n  const title = `Error in ${plugin?.id}`;\n\n  return (\n    <ErrorPanel title={title} error={error} defaultExpanded>\n      <Button variant=\"outlined\" onClick={resetError}>\n        Retry\n      </Button>\n    </ErrorPanel>\n  );\n};\n\ntype ErrorBoundaryProps = PropsWithChildren<{ plugin?: BackstagePlugin }>;\ntype ErrorBoundaryState = { error?: Error };\n\n/** @internal */\nexport class ErrorBoundary extends Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  state: ErrorBoundaryState = { error: undefined };\n\n  handleErrorReset = () => {\n    this.setState({ error: undefined });\n  };\n\n  render() {\n    const { error } = this.state;\n    const { plugin, children } = this.props;\n\n    if (error) {\n      // TODO: use a configurable error boundary fallback\n      return (\n        <DefaultErrorBoundaryFallback\n          plugin={plugin}\n          error={error}\n          resetError={this.handleErrorReset}\n        />\n      );\n    }\n\n    return children;\n  }\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactNode, Suspense } from 'react';\nimport { useApp } from '@backstage/core-plugin-api';\n\n/** @public */\nexport interface ExtensionSuspenseProps {\n  children: ReactNode;\n}\n\n/** @public */\nexport function ExtensionSuspense(props: ExtensionSuspenseProps) {\n  const { children } = props;\n\n  const app = useApp();\n  const { Progress } = app.getComponents();\n\n  return <Suspense fallback={<Progress />}>{children}</Suspense>;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getOrCreateGlobalSingleton } from '@backstage/version-bridge';\nimport {\n  AnalyticsApi,\n  AnalyticsEventAttributes,\n  AnalyticsTracker,\n} from '../apis';\nimport { AnalyticsContextValue } from './';\n\ntype TempGlobalEvents = {\n  /**\n   * Stores the most recent \"gathered\" mountpoint navigation.\n   */\n  mostRecentGatheredNavigation?: {\n    action: string;\n    subject: string;\n    value?: number;\n    attributes?: AnalyticsEventAttributes;\n    context: AnalyticsContextValue;\n  };\n  /**\n   * Stores the most recent routable extension render.\n   */\n  mostRecentRoutableExtensionRender?: {\n    context: AnalyticsContextValue;\n  };\n  /**\n   * Tracks whether or not a beforeunload event listener has already been\n   * registered.\n   */\n  beforeUnloadRegistered: boolean;\n};\n\n/**\n * Temporary global store for select event data. Used to make `navigate` events\n * more accurate when gathered mountpoints are used.\n */\nconst globalEvents = getOrCreateGlobalSingleton<TempGlobalEvents>(\n  'core-plugin-api:analytics-tracker-events',\n  () => ({\n    mostRecentGatheredNavigation: undefined,\n    mostRecentRoutableExtensionRender: undefined,\n    beforeUnloadRegistered: false,\n  }),\n);\n\n/**\n * Internal-only event representing when a routable extension is rendered.\n */\nexport const routableExtensionRenderedEvent = '_ROUTABLE-EXTENSION-RENDERED';\n\nexport class Tracker implements AnalyticsTracker {\n  constructor(\n    private readonly analyticsApi: AnalyticsApi,\n    private context: AnalyticsContextValue = {\n      routeRef: 'unknown',\n      pluginId: 'root',\n      extension: 'App',\n    },\n  ) {\n    // Only register a single beforeunload event across all trackers.\n    if (!globalEvents.beforeUnloadRegistered) {\n      // Before the page unloads, attempt to capture any deferred navigation\n      // events that haven't yet been captured.\n      addEventListener(\n        'beforeunload',\n        () => {\n          if (globalEvents.mostRecentGatheredNavigation) {\n            this.analyticsApi.captureEvent({\n              ...globalEvents.mostRecentGatheredNavigation,\n              ...globalEvents.mostRecentRoutableExtensionRender,\n            });\n            globalEvents.mostRecentGatheredNavigation = undefined;\n            globalEvents.mostRecentRoutableExtensionRender = undefined;\n          }\n        },\n        { once: true, passive: true },\n      );\n\n      // Prevent duplicate handlers from being registered.\n      globalEvents.beforeUnloadRegistered = true;\n    }\n  }\n\n  setContext(context: AnalyticsContextValue) {\n    this.context = context;\n  }\n\n  captureEvent(\n    action: string,\n    subject: string,\n    {\n      value,\n      attributes,\n    }: { value?: number; attributes?: AnalyticsEventAttributes } = {},\n  ) {\n    // Never pass internal \"_routeNodeType\" context value.\n    const { _routeNodeType, ...context } = this.context;\n\n    // Never fire the special \"_routable-extension-rendered\" internal event.\n    if (action === routableExtensionRenderedEvent) {\n      // But keep track of it if we're delaying a `navigate` event for a\n      // a gathered route node type.\n      if (globalEvents.mostRecentGatheredNavigation) {\n        globalEvents.mostRecentRoutableExtensionRender = {\n          context: {\n            ...context,\n            extension: 'App',\n          },\n        };\n      }\n      return;\n    }\n\n    // If we are about to fire a real event, and we have an un-fired gathered\n    // mountpoint navigation on the global store, we need to fire the navigate\n    // event first, so this real event happens accurately after the navigation.\n    if (globalEvents.mostRecentGatheredNavigation) {\n      try {\n        this.analyticsApi.captureEvent({\n          ...globalEvents.mostRecentGatheredNavigation,\n          ...globalEvents.mostRecentRoutableExtensionRender,\n        });\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Error during analytics event capture. %o', e);\n      }\n\n      // Clear the global stores.\n      globalEvents.mostRecentGatheredNavigation = undefined;\n      globalEvents.mostRecentRoutableExtensionRender = undefined;\n    }\n\n    // Never directly fire a navigation event on a gathered route with default\n    // contextual details.\n    if (\n      action === 'navigate' &&\n      _routeNodeType === 'gathered' &&\n      context.pluginId === 'root'\n    ) {\n      // Instead, set it on the global store.\n      globalEvents.mostRecentGatheredNavigation = {\n        action,\n        subject,\n        value,\n        attributes,\n        context,\n      };\n      return;\n    }\n\n    try {\n      this.analyticsApi.captureEvent({\n        action,\n        subject,\n        value,\n        attributes,\n        context,\n      });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error during analytics event capture. %o', e);\n    }\n  }\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PropsWithChildren, ReactNode, useEffect } from 'react';\nimport { AnalyticsContext, useAnalytics } from '@backstage/core-plugin-api';\nimport { BackstagePlugin } from '../wiring';\nimport { ErrorBoundary } from './ErrorBoundary';\nimport { ExtensionSuspense } from './ExtensionSuspense';\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport { routableExtensionRenderedEvent } from '../../../core-plugin-api/src/analytics/Tracker';\n\ntype RouteTrackerProps = PropsWithChildren<{\n  disableTracking?: boolean;\n}>;\n\nconst RouteTracker = (props: RouteTrackerProps) => {\n  const { disableTracking, children } = props;\n  const analytics = useAnalytics();\n\n  // This event, never exposed to end-users of the analytics API,\n  // helps inform which extension metadata gets associated with a\n  // navigation event when the route navigated to is a gathered\n  // mountpoint.\n  useEffect(() => {\n    if (disableTracking) return;\n    analytics.captureEvent(routableExtensionRenderedEvent, '');\n  }, [analytics, disableTracking]);\n\n  return <>{children}</>;\n};\n\n/** @public */\nexport interface ExtensionBoundaryProps {\n  id: string;\n  source?: BackstagePlugin;\n  routable?: boolean;\n  children: ReactNode;\n}\n\n/** @public */\nexport function ExtensionBoundary(props: ExtensionBoundaryProps) {\n  const { id, source, routable, children } = props;\n\n  // Skipping \"routeRef\" attribute in the new system, the extension \"id\" should provide more insight\n  const attributes = {\n    extension: id,\n    pluginId: source?.id,\n  };\n\n  return (\n    <ExtensionSuspense>\n      <ErrorBoundary plugin={source}>\n        <AnalyticsContext attributes={attributes}>\n          <RouteTracker disableTracking={!routable}>{children}</RouteTracker>\n        </AnalyticsContext>\n      </ErrorBoundary>\n    </ExtensionSuspense>\n  );\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @public */\nexport type ExtensionDataRef<\n  TData,\n  TConfig extends { optional?: true } = {},\n> = {\n  id: string;\n  T: TData;\n  config: TConfig;\n  $$type: '@backstage/ExtensionDataRef';\n};\n\n/** @public */\nexport interface ConfigurableExtensionDataRef<\n  TData,\n  TConfig extends { optional?: true } = {},\n> extends ExtensionDataRef<TData, TConfig> {\n  optional(): ConfigurableExtensionDataRef<TData, TData & { optional: true }>;\n}\n\n// TODO: change to options object with ID.\n/** @public */\nexport function createExtensionDataRef<TData>(\n  id: string,\n): ConfigurableExtensionDataRef<TData> {\n  return {\n    id,\n    $$type: '@backstage/ExtensionDataRef',\n    config: {},\n    optional() {\n      return { ...this, config: { ...this.config, optional: true } };\n    },\n  } as ConfigurableExtensionDataRef<TData>;\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JSX } from 'react';\nimport {\n  AnyApiFactory,\n  AppTheme,\n  IconComponent,\n} from '@backstage/core-plugin-api';\nimport { createExtensionDataRef } from './createExtensionDataRef';\nimport { RouteRef } from '../routing';\n\n/** @public */\nexport type NavTarget = {\n  title: string;\n  icon: IconComponent;\n  routeRef: RouteRef<undefined>;\n};\n\n/** @public */\nexport const coreExtensionData = {\n  reactElement: createExtensionDataRef<JSX.Element>('core.reactElement'),\n  routePath: createExtensionDataRef<string>('core.routing.path'),\n  apiFactory: createExtensionDataRef<AnyApiFactory>('core.api.factory'),\n  routeRef: createExtensionDataRef<RouteRef>('core.routing.ref'),\n  navTarget: createExtensionDataRef<NavTarget>('core.nav.target'),\n  theme: createExtensionDataRef<AppTheme>('core.theme'),\n};\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PortableSchema } from '../schema';\nimport { Expand } from '../types';\nimport { ExtensionDataRef } from './createExtensionDataRef';\nimport { ExtensionInput } from './createExtensionInput';\nimport { BackstagePlugin } from './createPlugin';\n\n/** @public */\nexport type AnyExtensionDataMap = {\n  [name in string]: ExtensionDataRef<unknown, { optional?: true }>;\n};\n\n/** @public */\nexport type AnyExtensionInputMap = {\n  [inputName in string]: ExtensionInput<\n    AnyExtensionDataMap,\n    { optional: boolean; singleton: boolean }\n  >;\n};\n\n/**\n * Converts an extension data map into the matching concrete data values type.\n * @public\n */\nexport type ExtensionDataValues<TExtensionData extends AnyExtensionDataMap> = {\n  [DataName in keyof TExtensionData as TExtensionData[DataName]['config'] extends {\n    optional: true;\n  }\n    ? never\n    : DataName]: TExtensionData[DataName]['T'];\n} & {\n  [DataName in keyof TExtensionData as TExtensionData[DataName]['config'] extends {\n    optional: true;\n  }\n    ? DataName\n    : never]?: TExtensionData[DataName]['T'];\n};\n\n/**\n * Converts an extension input map into the matching concrete input values type.\n * @public\n */\nexport type ExtensionInputValues<\n  TInputs extends { [name in string]: ExtensionInput<any, any> },\n> = {\n  [InputName in keyof TInputs]: false extends TInputs[InputName]['config']['singleton']\n    ? Array<Expand<ExtensionDataValues<TInputs[InputName]['extensionData']>>>\n    : false extends TInputs[InputName]['config']['optional']\n    ? Expand<ExtensionDataValues<TInputs[InputName]['extensionData']>>\n    : Expand<\n        ExtensionDataValues<TInputs[InputName]['extensionData']> | undefined\n      >;\n};\n\n/** @public */\nexport interface CreateExtensionOptions<\n  TOutput extends AnyExtensionDataMap,\n  TInputs extends AnyExtensionInputMap,\n  TConfig,\n> {\n  id: string;\n  attachTo: { id: string; input: string };\n  disabled?: boolean;\n  inputs?: TInputs;\n  output: TOutput;\n  configSchema?: PortableSchema<TConfig>;\n  factory(options: {\n    source?: BackstagePlugin;\n    config: TConfig;\n    inputs: Expand<ExtensionInputValues<TInputs>>;\n  }): Expand<ExtensionDataValues<TOutput>>;\n}\n\n/** @public */\nexport interface Extension<TConfig> {\n  $$type: '@backstage/Extension';\n  id: string;\n  attachTo: { id: string; input: string };\n  disabled: boolean;\n  inputs: AnyExtensionInputMap;\n  output: AnyExtensionDataMap;\n  configSchema?: PortableSchema<TConfig>;\n  factory(options: {\n    source?: BackstagePlugin;\n    config: TConfig;\n    inputs: Record<\n      string,\n      undefined | Record<string, unknown> | Array<Record<string, unknown>>\n    >;\n  }): ExtensionDataValues<any>;\n}\n\n/** @public */\nexport function createExtension<\n  TOutput extends AnyExtensionDataMap,\n  TInputs extends AnyExtensionInputMap,\n  TConfig = never,\n>(\n  options: CreateExtensionOptions<TOutput, TInputs, TConfig>,\n): Extension<TConfig> {\n  return {\n    ...options,\n    disabled: options.disabled ?? false,\n    $$type: '@backstage/Extension',\n    inputs: options.inputs ?? {},\n    factory({ inputs, ...rest }) {\n      // TODO: Simplify this, but TS wouldn't infer the input type for some reason\n      return options.factory({\n        inputs: inputs as Expand<ExtensionInputValues<TInputs>>,\n        ...rest,\n      });\n    },\n  };\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnyExtensionDataMap } from './createExtension';\n\n/** @public */\nexport interface ExtensionInput<\n  TExtensionData extends AnyExtensionDataMap,\n  TConfig extends { singleton: boolean; optional: boolean },\n> {\n  $$type: '@backstage/ExtensionInput';\n  extensionData: TExtensionData;\n  config: TConfig;\n}\n\n/** @public */\nexport function createExtensionInput<\n  TExtensionData extends AnyExtensionDataMap,\n  TConfig extends { singleton?: boolean; optional?: boolean },\n>(\n  extensionData: TExtensionData,\n  config?: TConfig,\n): ExtensionInput<\n  TExtensionData,\n  {\n    singleton: TConfig['singleton'] extends true ? true : false;\n    optional: TConfig['optional'] extends true ? true : false;\n  }\n> {\n  return {\n    $$type: '@backstage/ExtensionInput',\n    extensionData,\n    config: {\n      singleton: Boolean(config?.singleton) as TConfig['singleton'] extends true\n        ? true\n        : false,\n      optional: Boolean(config?.optional) as TConfig['optional'] extends true\n        ? true\n        : false,\n    },\n  };\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Extension } from './createExtension';\nimport { ExternalRouteRef, RouteRef } from '../routing';\n\n/** @public */\nexport type AnyRoutes = { [name in string]: RouteRef };\n\n/** @public */\nexport type AnyExternalRoutes = { [name in string]: ExternalRouteRef };\n\n/** @public */\nexport interface PluginOptions<\n  Routes extends AnyRoutes,\n  ExternalRoutes extends AnyExternalRoutes,\n> {\n  id: string;\n  routes?: Routes;\n  externalRoutes?: ExternalRoutes;\n  extensions?: Extension<unknown>[];\n}\n\n/** @public */\nexport interface BackstagePlugin<\n  Routes extends AnyRoutes = AnyRoutes,\n  ExternalRoutes extends AnyExternalRoutes = AnyExternalRoutes,\n> {\n  $$type: '@backstage/BackstagePlugin';\n  id: string;\n  extensions: Extension<unknown>[];\n  routes: Routes;\n  externalRoutes: ExternalRoutes;\n}\n\n/** @public */\nexport function createPlugin<\n  Routes extends AnyRoutes = {},\n  ExternalRoutes extends AnyExternalRoutes = {},\n>(\n  options: PluginOptions<Routes, ExternalRoutes>,\n): BackstagePlugin<Routes, ExternalRoutes> {\n  return {\n    ...options,\n    routes: options.routes ?? ({} as Routes),\n    externalRoutes: options.externalRoutes ?? ({} as ExternalRoutes),\n    extensions: options.extensions ?? [],\n    $$type: '@backstage/BackstagePlugin',\n  };\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Extension } from './createExtension';\n\n/** @public */\nexport interface ExtensionOverridesOptions {\n  extensions: Extension<unknown>[];\n}\n\n/** @public */\nexport interface ExtensionOverrides {\n  $$type: '@backstage/ExtensionOverrides';\n}\n\n/** @internal */\nexport interface InternalExtensionOverrides extends ExtensionOverrides {\n  version: string;\n  extensions: Extension<unknown>[];\n}\n\n/** @public */\nexport function createExtensionOverrides(\n  options: ExtensionOverridesOptions,\n): ExtensionOverrides {\n  return {\n    $$type: '@backstage/ExtensionOverrides',\n    version: 'v1',\n    extensions: options.extensions,\n  } as InternalExtensionOverrides;\n}\n\n/** @internal */\nexport function toInternalExtensionOverrides(\n  overrides: ExtensionOverrides,\n): InternalExtensionOverrides {\n  const internal = overrides as InternalExtensionOverrides;\n  if (internal.$$type !== '@backstage/ExtensionOverrides') {\n    throw new Error(\n      `Invalid translation resource, bad type '${internal.$$type}'`,\n    );\n  }\n  if (internal.version !== 'v1') {\n    throw new Error(\n      `Invalid translation resource, bad version '${internal.version}'`,\n    );\n  }\n  return internal;\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnyApiFactory, AnyApiRef } from '@backstage/core-plugin-api';\nimport { PortableSchema } from '../schema';\nimport {\n  ExtensionInputValues,\n  createExtension,\n  coreExtensionData,\n} from '../wiring';\nimport { AnyExtensionInputMap } from '../wiring/createExtension';\nimport { Expand } from '../types';\n\n/** @public */\nexport function createApiExtension<\n  TConfig extends {},\n  TInputs extends AnyExtensionInputMap,\n>(\n  options: (\n    | {\n        api: AnyApiRef;\n        factory: (options: {\n          config: TConfig;\n          inputs: Expand<ExtensionInputValues<TInputs>>;\n        }) => AnyApiFactory;\n      }\n    | {\n        factory: AnyApiFactory;\n      }\n  ) & {\n    configSchema?: PortableSchema<TConfig>;\n    inputs?: TInputs;\n  },\n) {\n  const { factory, configSchema, inputs: extensionInputs } = options;\n\n  const apiRef =\n    'api' in options ? options.api : (factory as { api: AnyApiRef }).api;\n\n  return createExtension({\n    id: `apis.${apiRef.id}`,\n    attachTo: { id: 'core', input: 'apis' },\n    inputs: extensionInputs,\n    configSchema,\n    output: {\n      api: coreExtensionData.apiFactory,\n    },\n    factory({ config, inputs }) {\n      if (typeof factory === 'function') {\n        return { api: factory({ config, inputs }) };\n      }\n      return { api: factory };\n    },\n  });\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/types';\nimport { z, ZodSchema, ZodTypeDef } from 'zod';\nimport zodToJsonSchema from 'zod-to-json-schema';\nimport { PortableSchema } from './types';\n\n/** @public */\nexport function createSchemaFromZod<TOutput, TInput>(\n  schemaCreator: (zImpl: typeof z) => ZodSchema<TOutput, ZodTypeDef, TInput>,\n): PortableSchema<TOutput> {\n  const schema = schemaCreator(z);\n  return {\n    // TODO: Types allow z.array etc here but it will break stuff\n    parse: input => {\n      const result = schema.safeParse(input);\n      if (result.success) {\n        return result.data;\n      }\n\n      throw new Error(result.error.issues.map(formatIssue).join('; '));\n    },\n    // TODO: Verify why we are not compatible with the latest zodToJsonSchema.\n    schema: zodToJsonSchema(schema) as JsonObject,\n  };\n}\n\nfunction formatIssue(issue: z.ZodIssue): string {\n  if (issue.code === 'invalid_union') {\n    return formatIssue(issue.unionErrors[0].issues[0]);\n  }\n  let message = issue.message;\n  if (message === 'Required') {\n    message = `Missing required value`;\n  }\n  if (issue.path.length) {\n    message += ` at '${issue.path.join('.')}'`;\n  }\n  return message;\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { lazy } from 'react';\nimport { ExtensionBoundary } from '../components';\nimport { createSchemaFromZod, PortableSchema } from '../schema';\nimport {\n  coreExtensionData,\n  createExtension,\n  Extension,\n  ExtensionInputValues,\n  AnyExtensionInputMap,\n} from '../wiring';\nimport { RouteRef } from '../routing';\nimport { Expand } from '../types';\n\n/**\n * Helper for creating extensions for a routable React page component.\n *\n * @public\n */\nexport function createPageExtension<\n  TConfig extends { path: string },\n  TInputs extends AnyExtensionInputMap,\n>(\n  options: (\n    | {\n        defaultPath: string;\n      }\n    | {\n        configSchema: PortableSchema<TConfig>;\n      }\n  ) & {\n    id: string;\n    attachTo?: { id: string; input: string };\n    disabled?: boolean;\n    inputs?: TInputs;\n    routeRef?: RouteRef;\n    loader: (options: {\n      config: TConfig;\n      inputs: Expand<ExtensionInputValues<TInputs>>;\n    }) => Promise<JSX.Element>;\n  },\n): Extension<TConfig> {\n  const { id } = options;\n\n  const configSchema =\n    'configSchema' in options\n      ? options.configSchema\n      : (createSchemaFromZod(z =>\n          z.object({ path: z.string().default(options.defaultPath) }),\n        ) as PortableSchema<TConfig>);\n\n  return createExtension({\n    id,\n    attachTo: options.attachTo ?? { id: 'core.routes', input: 'routes' },\n    configSchema,\n    inputs: options.inputs,\n    disabled: options.disabled,\n    output: {\n      element: coreExtensionData.reactElement,\n      path: coreExtensionData.routePath,\n      routeRef: coreExtensionData.routeRef.optional(),\n    },\n    factory({ config, inputs, source }) {\n      const ExtensionComponent = lazy(() =>\n        options\n          .loader({ config, inputs })\n          .then(element => ({ default: () => element })),\n      );\n\n      return {\n        path: config.path,\n        routeRef: options.routeRef,\n        element: (\n          <ExtensionBoundary id={id} source={source} routable>\n            <ExtensionComponent />\n          </ExtensionBoundary>\n        ),\n      };\n    },\n  });\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IconComponent } from '@backstage/core-plugin-api';\nimport { createSchemaFromZod } from '../schema/createSchemaFromZod';\nimport { coreExtensionData, createExtension } from '../wiring';\nimport { RouteRef } from '../routing';\n\n/**\n * Helper for creating extensions for a nav item.\n * @public\n */\nexport function createNavItemExtension(options: {\n  id: string;\n  routeRef: RouteRef<undefined>;\n  title: string;\n  icon: IconComponent;\n}) {\n  const { id, routeRef, title, icon } = options;\n  return createExtension({\n    id,\n    attachTo: { id: 'core.nav', input: 'items' },\n    configSchema: createSchemaFromZod(z =>\n      z.object({\n        title: z.string().default(title),\n      }),\n    ),\n    output: {\n      navTarget: coreExtensionData.navTarget,\n    },\n    factory: ({ config }) => ({\n      navTarget: {\n        title: config.title,\n        icon,\n        routeRef,\n      },\n    }),\n  });\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createExtension, coreExtensionData } from '../wiring';\nimport { AppTheme } from '@backstage/core-plugin-api';\n\n/** @public */\nexport function createThemeExtension(theme: AppTheme) {\n  return createExtension({\n    id: `themes.${theme.id}`,\n    attachTo: { id: 'core', input: 'themes' },\n    output: {\n      theme: coreExtensionData.theme,\n    },\n    factory: () => ({ theme }),\n  });\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst MESSAGE_MARKER = 'eHgtF5hmbrXyiEvo';\n\n/**\n * Internal helper that describes the location of the parent caller.\n * @internal\n */\nexport function describeParentCallSite(\n  ErrorConstructor: { new (message: string): Error } = Error,\n): string {\n  const { stack } = new ErrorConstructor(MESSAGE_MARKER);\n  if (!stack) {\n    return '<unknown>';\n  }\n\n  // Safari and Firefox don't include the error itself in the stack\n  const startIndex = stack.includes(MESSAGE_MARKER)\n    ? stack.indexOf('\\n') + 1\n    : 0;\n  const secondEntryStart =\n    stack.indexOf('\\n', stack.indexOf('\\n', startIndex) + 1) + 1;\n  const secondEntryEnd = stack.indexOf('\\n', secondEntryStart);\n\n  const line = stack.substring(secondEntryStart, secondEntryEnd).trim();\n  if (!line) {\n    return 'unknown';\n  }\n\n  // Below we try to extract the location for different browsers.\n  // Since RouteRefs are declared at the top-level of modules the caller name isn't interesting.\n\n  // Chrome\n  if (line.includes('(')) {\n    return line.substring(line.indexOf('(') + 1, line.indexOf(')'));\n  }\n\n  // Safari & Firefox\n  if (line.includes('@')) {\n    return line.substring(line.indexOf('@') + 1);\n  }\n\n  // Give up\n  return line;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { describeParentCallSite } from './describeParentCallSite';\nimport { AnyRouteRefParams } from './types';\n\n/**\n * Absolute route reference.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @public\n */\nexport interface RouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n> {\n  readonly $$type: '@backstage/RouteRef';\n  readonly T: TParams;\n}\n\n/** @internal */\nexport interface InternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n> extends RouteRef<TParams> {\n  readonly version: 'v1';\n  getParams(): string[];\n  getDescription(): string;\n\n  setId(id: string): void;\n}\n\n/** @internal */\nexport function toInternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n>(resource: RouteRef<TParams>): InternalRouteRef<TParams> {\n  const r = resource as InternalRouteRef<TParams>;\n  if (r.$$type !== '@backstage/RouteRef') {\n    throw new Error(`Invalid RouteRef, bad type '${r.$$type}'`);\n  }\n\n  return r;\n}\n\n/** @internal */\nexport function isRouteRef(opaque: { $$type: string }): opaque is RouteRef {\n  return opaque.$$type === '@backstage/RouteRef';\n}\n\n/** @internal */\nexport class RouteRefImpl implements InternalRouteRef {\n  readonly $$type = '@backstage/RouteRef';\n  readonly version = 'v1';\n  declare readonly T: never;\n\n  #id?: string;\n  #params: string[];\n  #creationSite: string;\n\n  constructor(readonly params: string[] = [], creationSite: string) {\n    this.#params = params;\n    this.#creationSite = creationSite;\n  }\n\n  getParams(): string[] {\n    return this.#params;\n  }\n\n  getDescription(): string {\n    if (this.#id) {\n      return this.#id;\n    }\n    return `created at '${this.#creationSite}'`;\n  }\n\n  get #name() {\n    return this.$$type.slice('@backstage/'.length);\n  }\n\n  setId(id: string): void {\n    if (!id) {\n      throw new Error(`${this.#name} id must be a non-empty string`);\n    }\n    if (this.#id) {\n      throw new Error(\n        `${this.#name} was referenced twice as both '${this.#id}' and '${id}'`,\n      );\n    }\n    this.#id = id;\n  }\n\n  toString(): string {\n    return `${this.#name}{${this.getDescription()}}`;\n  }\n}\n\n/**\n * Create a {@link RouteRef} from a route descriptor.\n *\n * @param config - Description of the route reference to be created.\n * @public\n */\nexport function createRouteRef<\n  // Params is the type that we care about and the one to be embedded in the route ref.\n  // For example, given the params ['name', 'kind'], Params will be {name: string, kind: string}\n  TParams extends { [param in TParamKeys]: string } | undefined = undefined,\n  TParamKeys extends string = string,\n>(config?: {\n  /** A list of parameter names that the path that this route ref is bound to must contain */\n  readonly params: string extends TParamKeys ? (keyof TParams)[] : TParamKeys[];\n}): RouteRef<\n  keyof TParams extends never\n    ? undefined\n    : string extends TParamKeys\n    ? TParams\n    : { [param in TParamKeys]: string }\n> {\n  return new RouteRefImpl(\n    config?.params as string[] | undefined,\n    describeParentCallSite(),\n  ) as RouteRef<any>;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RouteRef, toInternalRouteRef } from './RouteRef';\nimport { AnyRouteRefParams } from './types';\n\n// Should match the pattern in react-router\nconst PARAM_PATTERN = /^\\w+$/;\n\n/**\n * Descriptor of a route relative to an absolute {@link RouteRef}.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @public\n */\nexport interface SubRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n> {\n  readonly $$type: '@backstage/SubRouteRef';\n\n  readonly T: TParams;\n\n  readonly path: string;\n}\n\n/** @internal */\nexport interface InternalSubRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n> extends SubRouteRef<TParams> {\n  readonly version: 'v1';\n\n  getParams(): string[];\n  getParent(): RouteRef;\n  getDescription(): string;\n}\n\n/** @internal */\nexport function toInternalSubRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n>(resource: SubRouteRef<TParams>): InternalSubRouteRef<TParams> {\n  const r = resource as InternalSubRouteRef<TParams>;\n  if (r.$$type !== '@backstage/SubRouteRef') {\n    throw new Error(`Invalid SubRouteRef, bad type '${r.$$type}'`);\n  }\n\n  return r;\n}\n\n/** @internal */\nexport function isSubRouteRef(opaque: {\n  $$type: string;\n}): opaque is SubRouteRef {\n  return opaque.$$type === '@backstage/SubRouteRef';\n}\n\n/** @internal */\nexport class SubRouteRefImpl<TParams extends AnyRouteRefParams>\n  implements SubRouteRef<TParams>\n{\n  readonly $$type = '@backstage/SubRouteRef';\n  readonly version = 'v1';\n  declare readonly T: never;\n\n  #params: string[];\n  #parent: RouteRef;\n\n  constructor(readonly path: string, params: string[], parent: RouteRef) {\n    this.#params = params;\n    this.#parent = parent;\n  }\n\n  getParams(): string[] {\n    return this.#params;\n  }\n\n  getParent(): RouteRef {\n    return this.#parent;\n  }\n\n  getDescription(): string {\n    const parent = toInternalRouteRef(this.#parent);\n    return `at ${this.path} with parent ${parent.getDescription()}`;\n  }\n\n  toString(): string {\n    return `SubRouteRef{${this.getDescription()}}`;\n  }\n}\n\n/**\n * Used in {@link PathParams} type declaration.\n * @ignore\n */\ntype ParamPart<S extends string> = S extends `:${infer Param}` ? Param : never;\n\n/**\n * Used in {@link PathParams} type declaration.\n * @ignore\n */\ntype ParamNames<S extends string> = S extends `${infer Part}/${infer Rest}`\n  ? ParamPart<Part> | ParamNames<Rest>\n  : ParamPart<S>;\n/**\n * This utility type helps us infer a Param object type from a string path\n * For example, `/foo/:bar/:baz` inferred to `{ bar: string, baz: string }`\n * @ignore\n */\ntype PathParams<S extends string> = { [name in ParamNames<S>]: string };\n\n/**\n * Merges a param object type with an optional params type into a params object.\n * @ignore\n */\ntype MergeParams<\n  P1 extends { [param in string]: string },\n  P2 extends AnyRouteRefParams,\n> = (P1[keyof P1] extends never ? {} : P1) & (P2 extends undefined ? {} : P2);\n\n/**\n * Convert empty params to undefined.\n * @ignore\n */\ntype TrimEmptyParams<Params extends { [param in string]: string }> =\n  keyof Params extends never ? undefined : Params;\n\n/**\n * Creates a SubRouteRef type given the desired parameters and parent route parameters.\n * The parameters types are merged together while ensuring that there is no overlap between the two.\n *\n * @ignore\n */\ntype MakeSubRouteRef<\n  Params extends { [param in string]: string },\n  ParentParams extends AnyRouteRefParams,\n> = keyof Params & keyof ParentParams extends never\n  ? SubRouteRef<TrimEmptyParams<MergeParams<Params, ParentParams>>>\n  : never;\n\n/**\n * Create a {@link SubRouteRef} from a route descriptor.\n *\n * @param config - Description of the route reference to be created.\n * @public\n */\nexport function createSubRouteRef<\n  Path extends string,\n  ParentParams extends AnyRouteRefParams = never,\n>(config: {\n  path: Path;\n  parent: RouteRef<ParentParams>;\n}): MakeSubRouteRef<PathParams<Path>, ParentParams> {\n  const { path, parent } = config;\n  type Params = PathParams<Path>;\n\n  const internalParent = toInternalRouteRef(parent);\n  const parentParams = internalParent.getParams();\n\n  // Collect runtime parameters from the path, e.g. ['bar', 'baz'] from '/foo/:bar/:baz'\n  const pathParams = path\n    .split('/')\n    .filter(p => p.startsWith(':'))\n    .map(p => p.substring(1));\n  const params = [...parentParams, ...pathParams];\n\n  if (parentParams.some(p => pathParams.includes(p as string))) {\n    throw new Error(\n      'SubRouteRef may not have params that overlap with its parent',\n    );\n  }\n  if (!path.startsWith('/')) {\n    throw new Error(`SubRouteRef path must start with '/', got '${path}'`);\n  }\n  if (path.endsWith('/')) {\n    throw new Error(`SubRouteRef path must not end with '/', got '${path}'`);\n  }\n  for (const param of pathParams) {\n    if (!PARAM_PATTERN.test(param)) {\n      throw new Error(`SubRouteRef path has invalid param, got '${param}'`);\n    }\n  }\n\n  // We ensure that the type of the return type is sane here\n  const subRouteRef = new SubRouteRefImpl(\n    path,\n    params as string[],\n    parent,\n  ) as SubRouteRef<TrimEmptyParams<MergeParams<Params, ParentParams>>>;\n\n  // But skip type checking of the return value itself, because the conditional\n  // type checking of the parent parameter overlap is tricky to express.\n  return subRouteRef as any;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RouteRefImpl } from './RouteRef';\nimport { describeParentCallSite } from './describeParentCallSite';\nimport { AnyRouteRefParams } from './types';\n\n/**\n * Route descriptor, to be later bound to a concrete route by the app. Used to implement cross-plugin route references.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @public\n */\nexport interface ExternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n  TOptional extends boolean = boolean,\n> {\n  readonly $$type: '@backstage/ExternalRouteRef';\n  readonly T: TParams;\n  readonly optional: TOptional;\n}\n\n/** @internal */\nexport interface InternalExternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n  TOptional extends boolean = boolean,\n> extends ExternalRouteRef<TParams, TOptional> {\n  readonly version: 'v1';\n  getParams(): string[];\n  getDescription(): string;\n\n  setId(id: string): void;\n}\n\n/** @internal */\nexport function toInternalExternalRouteRef<\n  TParams extends AnyRouteRefParams = AnyRouteRefParams,\n  TOptional extends boolean = boolean,\n>(\n  resource: ExternalRouteRef<TParams, TOptional>,\n): InternalExternalRouteRef<TParams, TOptional> {\n  const r = resource as InternalExternalRouteRef<TParams, TOptional>;\n  if (r.$$type !== '@backstage/ExternalRouteRef') {\n    throw new Error(`Invalid ExternalRouteRef, bad type '${r.$$type}'`);\n  }\n\n  return r;\n}\n\n/** @internal */\nexport function isExternalRouteRef(opaque: {\n  $$type: string;\n}): opaque is ExternalRouteRef {\n  return opaque.$$type === '@backstage/ExternalRouteRef';\n}\n\n/** @internal */\nclass ExternalRouteRefImpl\n  extends RouteRefImpl\n  implements InternalExternalRouteRef\n{\n  readonly $$type = '@backstage/ExternalRouteRef' as any;\n\n  constructor(\n    readonly optional: boolean,\n    readonly params: string[] = [],\n    creationSite: string,\n  ) {\n    super(params, creationSite);\n  }\n}\n\n/**\n * Creates a route descriptor, to be later bound to a concrete route by the app. Used to implement cross-plugin route references.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}.\n *\n * @param options - Description of the route reference to be created.\n * @public\n */\nexport function createExternalRouteRef<\n  TParams extends { [param in TParamKeys]: string } | undefined = undefined,\n  TOptional extends boolean = false,\n  TParamKeys extends string = string,\n>(options?: {\n  /**\n   * The parameters that will be provided to the external route reference.\n   */\n  readonly params?: string extends TParamKeys\n    ? (keyof TParams)[]\n    : TParamKeys[];\n\n  /**\n   * Whether or not this route is optional, defaults to false.\n   *\n   * Optional external routes are not required to be bound in the app, and\n   * if they aren't, `useExternalRouteRef` will return `undefined`.\n   */\n  optional?: TOptional;\n}): ExternalRouteRef<\n  keyof TParams extends never\n    ? undefined\n    : string extends TParamKeys\n    ? TParams\n    : { [param in TParamKeys]: string },\n  TOptional\n> {\n  return new ExternalRouteRefImpl(\n    Boolean(options?.optional),\n    options?.params as string[] | undefined,\n    describeParentCallSite(),\n  ) as ExternalRouteRef<any, any>;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useMemo } from 'react';\nimport { matchRoutes, useLocation } from 'react-router-dom';\nimport { useVersionedContext } from '@backstage/version-bridge';\nimport { AnyRouteRefParams } from './types';\nimport { RouteRef } from './RouteRef';\nimport { SubRouteRef } from './SubRouteRef';\nimport { ExternalRouteRef } from './ExternalRouteRef';\n\n/**\n * TS magic for handling route parameters.\n *\n * @remarks\n *\n * The extra TS magic here is to require a single params argument if the RouteRef\n * had at least one param defined, but require 0 arguments if there are no params defined.\n * Without this we'd have to pass in empty object to all parameter-less RouteRefs\n * just to make TypeScript happy, or we would have to make the argument optional in\n * which case you might forget to pass it in when it is actually required.\n *\n * @public\n */\nexport type RouteFunc<TParams extends AnyRouteRefParams> = (\n  ...[params]: TParams extends undefined\n    ? readonly []\n    : readonly [params: TParams]\n) => string;\n\n/**\n * @internal\n */\nexport interface RouteResolver {\n  resolve<TParams extends AnyRouteRefParams>(\n    anyRouteRef:\n      | RouteRef<TParams>\n      | SubRouteRef<TParams>\n      | ExternalRouteRef<TParams, any>,\n    sourceLocation: Parameters<typeof matchRoutes>[1],\n  ): RouteFunc<TParams> | undefined;\n}\n\n/**\n * React hook for constructing URLs to routes.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}\n *\n * @param routeRef - The ref to route that should be converted to URL.\n * @returns A function that will in turn return the concrete URL of the `routeRef`.\n * @public\n */\nexport function useRouteRef<\n  TOptional extends boolean,\n  TParams extends AnyRouteRefParams,\n>(\n  routeRef: ExternalRouteRef<TParams, TOptional>,\n): TParams extends true ? RouteFunc<TParams> | undefined : RouteFunc<TParams>;\n\n/**\n * React hook for constructing URLs to routes.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}\n *\n * @param routeRef - The ref to route that should be converted to URL.\n * @returns A function that will in turn return the concrete URL of the `routeRef`.\n * @public\n */\nexport function useRouteRef<TParams extends AnyRouteRefParams>(\n  routeRef: RouteRef<TParams> | SubRouteRef<TParams>,\n): RouteFunc<TParams>;\n\n/**\n * React hook for constructing URLs to routes.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/plugins/composability#routing-system}\n *\n * @param routeRef - The ref to route that should be converted to URL.\n * @returns A function that will in turn return the concrete URL of the `routeRef`.\n * @public\n */\nexport function useRouteRef<TParams extends AnyRouteRefParams>(\n  routeRef:\n    | RouteRef<TParams>\n    | SubRouteRef<TParams>\n    | ExternalRouteRef<TParams, any>,\n): RouteFunc<TParams> | undefined {\n  const { pathname } = useLocation();\n  const versionedContext = useVersionedContext<{ 1: RouteResolver }>(\n    'routing-context',\n  );\n  if (!versionedContext) {\n    throw new Error('Routing context is not available');\n  }\n\n  const resolver = versionedContext.atVersion(1);\n  const routeFunc = useMemo(\n    () => resolver && resolver.resolve(routeRef, { pathname }),\n    [resolver, routeRef, pathname],\n  );\n\n  if (!versionedContext) {\n    throw new Error('useRouteRef used outside of routing context');\n  }\n  if (!resolver) {\n    throw new Error('RoutingContext v1 not available');\n  }\n\n  const isOptional = 'optional' in routeRef && routeRef.optional;\n  if (!routeFunc && !isOptional) {\n    throw new Error(`No path for ${routeRef}`);\n  }\n\n  return routeFunc;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useParams } from 'react-router-dom';\nimport { AnyRouteRefParams } from './types';\nimport { RouteRef } from './RouteRef';\nimport { SubRouteRef } from './SubRouteRef';\n\n/**\n * React hook for retrieving dynamic params from the current URL.\n * @param _routeRef - Ref of the current route.\n * @public\n */\nexport function useRouteRefParams<Params extends AnyRouteRefParams>(\n  _routeRef: RouteRef<Params> | SubRouteRef<Params>,\n): Params {\n  return useParams() as Params;\n}\n"],"names":["__publicField","_params","__privateAdd","__privateSet","__privateGet"],"mappings":"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"}